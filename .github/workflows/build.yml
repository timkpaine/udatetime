name: Build Status

on:
  push:
    branches:
      - main
      - tkp/cicd
    tags:
      - v*
    paths-ignore:
      - LICENSE
      - README.md
      - "extras/**"
  pull_request:
    branches:
      - main
    paths-ignore:
      - LICENSE
      - README.md
      - "extras/**"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  checks: write
  pull-requests: write

jobs:
    build:
      strategy:
        matrix:
          os:
            - ubuntu-22.04 # https://github.com/actions/runner-images/blob/main/images/ubuntu/Ubuntu2204-Readme.md
            - macos-13 # https://github.com/actions/runner-images/blob/main/images/macos/macos-13-Readme.md
            - windows-2019 # https://github.com/actions/runner-images/blob/main/images/windows/Windows2019-Readme.md
          python-version:
            - "3.8"
            - "3.9"
            - "3.10"
            - "3.11"
            - "3.12"
          cibuildwheel:
            - "cp38"
            - "cp39"
            - "cp310"
            - "cp311"
            - "cp312"
          exclude:
            ############################
            # Things to always exclude #
            ############################
            # Skip when cibuildwheel != python version
            # to avoid duplication
            - python-version: "3.8"
              cibuildwheel: "cp39"
            - python-version: "3.8"
              cibuildwheel: "cp310"
            - python-version: "3.8"
              cibuildwheel: "cp311"
            - python-version: "3.8"
              cibuildwheel: "cp312"
            - python-version: "3.9"
              cibuildwheel: "cp38"
            - python-version: "3.9"
              cibuildwheel: "cp310"
            - python-version: "3.9"
              cibuildwheel: "cp311"
            - python-version: "3.9"
              cibuildwheel: "cp312"
            - python-version: "3.10"
              cibuildwheel: "cp38"
            - python-version: "3.10"
              cibuildwheel: "cp39"
            - python-version: "3.10"
              cibuildwheel: "cp311"
            - python-version: "3.10"
              cibuildwheel: "cp312"
            - python-version: "3.11"
              cibuildwheel: "cp38"
            - python-version: "3.11"
              cibuildwheel: "cp39"
            - python-version: "3.11"
              cibuildwheel: "cp310"
            - python-version: "3.11"
              cibuildwheel: "cp312"
            - python-version: "3.12"
              cibuildwheel: "cp38"
            - python-version: "3.12"
              cibuildwheel: "cp39"
            - python-version: "3.12"
              cibuildwheel: "cp310"
            - python-version: "3.12"
              cibuildwheel: "cp311"

      runs-on: ${{ matrix.os }}

      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v5
          with:
              python-version: '${{ matrix.python-version }}'
              cache: 'pip'
              cache-dependency-path: 'setup.py'

        - name: Install python dependencies
          run: pip install cibuildwheel==2.16.5 twine wheel

        ########
        # Linux
        - name: Python Wheel Steps (Linux - cibuildwheel)
          run: python -m cibuildwheel --output-dir dist
          env:
            CIBW_BUILD: "${{ matrix.cibuildwheel }}-manylinux_x86*"
            CIBW_BUILD_VERBOSITY: 3
          if: ${{ runner.os == 'Linux' }}

        ########
        # Macos
        - name: Python Build Steps (Macos x86)
          run: python -m cibuildwheel --output-dir dist
          env:
            CIBW_BUILD: "${{ matrix.cibuildwheel }}-macos*"
            CIBW_BUILD_VERBOSITY: 3
          if: ${{ runner.os == 'macOS' }}

        ##########
        # Windows
        - name: Python Build Steps (Windows 2019)
          run: python -m cibuildwheel --output-dir dist
          env:
            CIBW_BUILD: "${{ matrix.cibuildwheel }}-win_amd64"
            CIBW_BUILD_VERBOSITY: 3
          if: ${{ matrix.os == 'windows-2019' }}

        ##########
        # Common
        - name: Check Wheels
          run: python -m twine check --strict dist/*

        - name: Upload Wheel
          uses: actions/upload-artifact@v4
          with:
            name: dist-${{ runner.os }}-${{ runner.arch }}-${{ matrix.python-version }}
            path: dist/*.whl

    build_sdist:
      strategy:
        matrix:
          os:
            - ubuntu-22.04
          python-version:
            - 3.9

      runs-on: ${{ matrix.os }}

      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v5
          with:
              python-version: '${{ matrix.python-version }}'
              cache: 'pip'
              cache-dependency-path: 'setup.py'

        - name: Install python dependencies
          run: pip install twine

        - name: Python SDist Steps
          run: python setup.py sdist

        - name: Check sdist
          run: python -m twine check --strict dist/*

        - name: Upload SDist
          uses: actions/upload-artifact@v4
          with:
              name: sdist
              path: dist/*.tar.gz

    test:
      needs:
        - build

      strategy:
        matrix:
          os:
            - ubuntu-22.04
            - macos-13
            - windows-2019
          python-version:
            - 3.8
            - 3.9
            - "3.10"
            - 3.11
            - 3.12

      runs-on: ${{ matrix.os }}

      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v5
          with:
              python-version: '${{ matrix.python-version }}'
              cache: 'pip'
              cache-dependency-path: 'setup.py'

        - name: Download wheel
          uses: actions/download-artifact@v4
          with:
            name: dist-${{ runner.os }}-${{ runner.arch }}-${{ matrix.python-version }}

        ########
        # Linux
        - name: Install wheel (Linux)
          run: python -m pip install -U *manylinux*.whl
          if: ${{ runner.os == 'Linux' }}

        ########
        # Macos
        - name: Install wheel (OSX x86)
          run: python -m pip install -U *x86*.whl
          if: ${{ runner.os == 'macOS' && runner.arch == 'X64' }}

        - name: Install wheel (OSX arm)
          run: python -m pip install -U *arm64*.whl
          if: ${{ runner.os == 'macOS' && runner.arch == 'ARM64' }}

        ########
        # Windows
        - name: Install wheel (windows)
          run: python -m pip install -U (Get-ChildItem .\*.whl | Select-Object -Expand FullName)
          if: ${{ runner.os == 'Windows' }}

        ##########
        # Common
        - name: Install python dependencies
          run: pip install pytest
          # TODO failing
          if: ${{ runner.os != 'Windows' }}

        - name: Python Test Steps
          run: pytest -vvv test

    test_sdist:
      needs:
        - build_sdist

      strategy:
        matrix:
          os:
            - ubuntu-22.04
          python-version:
            - 3.9

      runs-on: ${{ matrix.os }}

      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v5
          with:
              python-version: '${{ matrix.python-version }}'
              cache: 'pip'
              cache-dependency-path: 'setup.py'

        - uses: actions/download-artifact@v4
          with:
            name: sdist
            path: dist/

        - name: Install sdist
          run: python -m pip install -U -vvv dist/udatetime*.tar.gz

        - name: Install python dependencies
          run: pip install pytest

        - name: Python Test Steps
          run: pytest -vvv test

    publish_release_artifacts:
      needs:
        - build_sdist
        - build
        - test
        - test_sdist

      if: startsWith(github.ref, 'refs/tags/v')
      runs-on: ubuntu-22.04

      steps:
        - name: Download wheels and sdist
          uses: actions/download-artifact@v4
          with:
            name:
            merge-multiple: true
            path: ./dist

        - name: Display structure of downloaded files
          run: ls -R ./dist

        - name: Publish to github releases
          uses: softprops/action-gh-release@v2
          with:
            draft: true
            generate_release_notes: true
            files: dist/*
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
